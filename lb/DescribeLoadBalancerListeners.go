// 2018-01-10 10:13:21.960683 -0800 PST m=+26.140241967
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package lb

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type DescribeLoadBalancerListenersResp struct {
	Code        int64  `json:"code"`
	CodeDesc    string `json:"codeDesc"`
	ListenerSet []struct {
		SSLMode          string `json:"SSLMode"`
		CertCaID         string `json:"certCaId"`
		CertID           string `json:"certId"`
		HealthNum        int64  `json:"healthNum"`
		HealthSwitch     int64  `json:"healthSwitch"`
		HTTPCheckPath    string `json:"httpCheckPath"`
		HTTPCode         int64  `json:"httpCode"`
		HTTPHash         string `json:"httpHash"`
		InstancePort     int64  `json:"instancePort"`
		IntervalTime     int64  `json:"intervalTime"`
		ListenerID       string `json:"listenerId"`
		ListenerName     string `json:"listenerName"`
		LoadBalancerPort int64  `json:"loadBalancerPort"`
		Protocol         int64  `json:"protocol"`
		Scheduler        string `json:"scheduler"`
		SessionExpire    int64  `json:"sessionExpire"`
		Status           int64  `json:"status"`
		TimeOut          int64  `json:"timeOut"`
		UnListenerID     string `json:"unListenerId"`
		UnhealthNum      int64  `json:"unhealthNum"`
	} `json:"listenerSet"`
	Message    string `json:"message"`
	TotalCount int64  `json:"totalCount"`
}

// Implement https://cloud.tencent.com/document/api/214/1260
func (c *LbClient) DescribeLoadBalancerListeners(options ...string) (*DescribeLoadBalancerListenersResp, error) {
	resp, err := c.DoAction("DescribeLoadBalancerListeners", options...)
	if err != nil {
		return nil, err
	}
	var s DescribeLoadBalancerListenersResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func DescribeLoadBalancerListeners(options ...string) (*DescribeLoadBalancerListenersResp, error) {
	return DefaultClient.DescribeLoadBalancerListeners(options...)
}

func (r *DescribeLoadBalancerListenersResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
