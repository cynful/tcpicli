// 2017-11-13 03:31:59.22439 +0800 CST m=+24.311843407
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package vpc

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type CreateVpcResp struct {
	Code          int64  `json:"code"`
	CodeDesc      string `json:"codeDesc"`
	Message       string `json:"message"`
	RouteTableSet []struct {
		RouteTableID   string `json:"routeTableId"`
		RouteTableName string `json:"routeTableName"`
		RouteTableType int64  `json:"routeTableType"`
	} `json:"routeTableSet"`
	SubnetSet []struct {
		CidrBlock    string `json:"cidrBlock"`
		RouteTableID string `json:"routeTableId"`
		SubnetID     string `json:"subnetId"`
		SubnetName   string `json:"subnetName"`
		UnSubnetID   string `json:"unSubnetId"`
		Zone         string `json:"zone"`
		ZoneID       int64  `json:"zoneId"`
	} `json:"subnetSet"`
	UniqVpcID     string `json:"uniqVpcId"`
	VpcCreateTime string `json:"vpcCreateTime"`
	VpcID         string `json:"vpcId"`
}

// Implement https://cloud.tencent.com/document/api/215/1309
func CreateVpc(options ...string) (*CreateVpcResp, error) {
	resp, err := DoAction("CreateVpc", options...)
	if err != nil {
		return nil, err
	}
	var s CreateVpcResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func (r *CreateVpcResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
