// 2017-12-03 02:24:39.658095 -0800 PST m=+22.888816273
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package vod

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type GetTaskInfoResp struct {
	BeginProcessTime int64  `json:"beginProcessTime"`
	Code             int64  `json:"code"`
	CodeDesc         string `json:"codeDesc"`
	CreateTime       int64  `json:"createTime"`
	Data             struct {
		DstURL   string `json:"dstUrl"`
		ErrCode  int64  `json:"errCode"`
		FileID   string `json:"fileId"`
		Message  string `json:"message"`
		MetaData struct {
			AudioStreamList []struct {
				Bitrate      int64  `json:"bitrate"`
				Codec        string `json:"codec"`
				SamplingRate int64  `json:"samplingRate"`
			} `json:"audioStreamList"`
			Bitrate         int64  `json:"bitrate"`
			Container       string `json:"container"`
			Duration        int64  `json:"duration"`
			Height          int64  `json:"height"`
			Md5             string `json:"md5"`
			Size            int64  `json:"size"`
			VideoStreamList []struct {
				Bitrate int64  `json:"bitrate"`
				Codec   string `json:"codec"`
				Fps     int64  `json:"fps"`
				Height  int64  `json:"height"`
				Width   int64  `json:"width"`
			} `json:"videoStreamList"`
			Width int64 `json:"width"`
		} `json:"metaData"`
		ProcessTaskList interface{} `json:"processTaskList"`
		Status          string      `json:"status"`
		UserSubTaskID   string      `json:"userSubTaskId"`
		UserTaskID      string      `json:"userTaskId"`
		VodTaskID       string      `json:"vodTaskId"`
	} `json:"data"`
	FinishTime int64  `json:"finishTime"`
	Message    string `json:"message"`
	Status     string `json:"status"`
	Type       string `json:"type"`
}

// Implement https://cloud.tencent.com/document/api/266/11724
func GetTaskInfo(options ...string) (*GetTaskInfoResp, error) {
	resp, err := DoAction("GetTaskInfo", options...)
	if err != nil {
		return nil, err
	}
	var s GetTaskInfoResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func (r *GetTaskInfoResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
