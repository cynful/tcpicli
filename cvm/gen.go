// +build ignore

package main

import (
	. "."
	"github.com/tencentcloudplatform/tcpicli/autogen"
)

type Pkg struct{}

func (p *Pkg) DoAction(action string, query ...string) ([]byte, error) {
	return DoAction(action, query...)
}

func main() {
	vpcName := "vpcName=tcpiclicvmautogen" // vpc
	// cidrBlock := "cidrBlock=10.0.0.0/16"                        // vpc
	// subnetCidr := "subnetSet.0.cidrBlock=10.0.0.0/24"           // vpc
	// subnetZone := "subnetSet.0.zoneId=800002"                   // vpc
	// subnetName := "subnetSet.0.subnetName=tcpiclicvmautogen"    // vpc
	region := "Region=bj"                                       // common
	instanceChargeType := "InstanceChargeType=POSTPAID_BY_HOUR" // common
	version := "Version=2017-03-12"                             // common
	instanceName := "InstanceName=tcpiclicvmgen"                // RunInstances
	instanceType := "InstanceType=S2.SMALL1"                    // RunInstances
	vagueInstanceName := "VagueInstanceName=tcpiclicvmgen"      // DescribeInstances
	diskResize := "DataDisks.0.DiskSize=100"                    // ResizeInstanceDisks
	diskResizeInquiry := "DataDisks.0.DiskSize=150"             // InquiryPriceResizeInstanceDisks

	gen := &autogen.Gen{
		DocRoot: "https://cloud.tencent.com/document/api/",
		Seq: []string{
			// CreateVpc & CreateSubnet to run autogen cvm stuff on and capture their id and unId
			// `DO tcpicli vpc CreateVpc ` + region + " " + vpcName + " " + cidrBlock,
			`SET vpcId=tcpicli -f "{{range .Data}}{{.UnVpcID}}{{end}}" vpc DescribeVpcEx ` + region + " " + vpcName,
			`DO echo $vpcId`,
			// `DO tcpicli vpc CreateSubnet vpcId=$vpcId ` + region + " " + subnetCidr + " " + subnetName + " " + subnetZone,
			`SET subnetId=tcpicli -f "{{range .Data}}{{.UnSubnetID}}{{end}}" vpc DescribeSubnetEx vpcId=$vpcId ` + region,
			`DO echo $subnetId`,
			`SET placementZone=tcpicli -f "{{with index .Data 0}}{{.Zone}}{{end}}" vpc DescribeSubnetEx vpcId=$vpcId ` + region,
			`DO echo $placementZone`,
			`SET imageId=tcpicli img DescribeImages Version=2017-03-12 | grep -E -B1 -i "centos.*7\.3.*64" | grep -i imageid | awk '{ print $2 }' | tr -d "\","`,
			`DO echo $imageId`,
			// "RunInstances",
			// "DescribeInstances"
			`SET instanceId=tcpicli -f "{{range .Response.InstanceSet}}{{.InstanceID}}{{end}}" cvm DescribeInstances ` + region + " " + vagueInstanceName,
			`DO echo $instanceId`,
			`SET diskId=tcpicli -f "{{range .Response.InstanceSet}}{{range .DataDisks}}{{.DiskId}}{{end}}{{end}}" cvm DescribeInstances ` + region + " " + vagueInstanceName,
			`DO echo $diskId`,
			// "DescribeInstancesStatus",
			// "InquiryPriceRunInstances",
			// "StartInstances",
			// "StopInstances",
			// "TerminateInstances",
			// "RebootInstances",
			// "ResetInstance",
			// "InquiryPriceResetInstance",
			// "ResizeInstanceDisks",
			"InquiryPriceResizeInstanceDisks",
			// "RenewInstances",
			// "InquiryPriceRenewInstances",
			// "ResetInstancesType",
			// "InquiryPriceResetInstancesType",
			// "ModifyInstancesRenewFlag",
			// "ModifyInstancesAttribute",
			// "ResetInstancesInternetMaxBandwidth",
			// "ModifyInstancesProject",
			// "UpdateInstanceVpcConfig",
			// "ResetInstancesPassword",
			// "DescribeInstanceInternetBandwidthConfigs",
			// "DescribeImages",
			// "CreateImage",
			// "DeleteImages",
			// "ModifyImageAttribute",
			// "SyncImages",
			// "ModifyImageSharePermission",
			// "DescribeImageSharePermission",
			// "AttachNetworkInterface",
			// "DescribeSecurityGroups",
			// "CreateSecurityGroup",
			// "DeleteSecurityGroup",
			// "ModifySecurityGroupAttribute",
			// "DescribeSecurityGroupPolicy",
			// "ModifySecurityGroupPolicy",
			// "DescribeInstancesOfSecurityGroup",
			// "ModifySecurityGroupsOfInstance",
			// "DescribeAssociateSecurityGroups",
			// "DescribeEip",
			// "DescribeEipQuota",
			// "ModifyEipAttributes",
			// "CreateEip",
			// "DeleteEip",
			// "EipBindInstance",
			// "EipUnBindInstance",
			// "TransformWanIpToEip",
			// "DescribeKeyPairs",
			// "CreateKeyPair",
			// "ModifyKeyPairAttribute",
			// "DeleteKeyPairs",
			// "ImportKeyPair",
			// "AssociateInstancesKeyPairs",
			// "DisassociateInstancesKeyPairs",
			// Delete VPC stuff
			// `DO tcpicli vpc DeleteSubnet vpcId=$vpcId subnetId=$subnetId ` + region,
			// `DO tcpicli vpc DeleteVpc vpcId=$vpcId ` + region,
		},
		FuncMap: map[string][]string{
			"RunInstances": []string{"213/9384",
				region,
				version,
				instanceChargeType,
				instanceName,
				instanceType,
				"VirtualPrivateCloud.VpcId=$vpcId",
				"VirtualPrivateCloud.SubnetId=$subnetId",
				"ImageId=$imageId",
				"Placement.Zone=$placementZone",
			},
			"DescribeInstances": []string{"213/9388",
				region,
			},
			"DescribeInstancesStatus": []string{"213/9389",
				version,
			},
			"InquiryPriceRunInstances": []string{"213/9385",
				region,
				version,
				instanceType,
				"Placement.Zone=$placementZone",
				"ImageId=$imageId",
			},
			"StartInstances": []string{"213/9386",
				region,
				version,
				"InstanceIds.1=$instanceId",
			},
			"StopInstances": []string{"213/9383",
				region,
				version,
				"InstanceIds.1=$instanceId",
			},
			"TerminateInstances": []string{""},
			"RebootInstances": []string{"213/9369",
				region,
				version,
				"InstanceIds.1=$instanceId",
			},
			"ResetInstance": []string{"213/9398",
				region,
				version,
				"InstanceId=$instanceId",
			},
			"InquiryPriceResetInstance": []string{"213/9490",
				region,
				version,
				"InstanceId=$instanceId",
			},
			"ResizeInstanceDisks": []string{"213/9387",
				region,
				version,
				diskResize,
				"InstanceId=$instanceId",
			},
			"InquiryPriceResizeInstanceDisks": []string{"213/9487",
				region,
				version,
				diskResizeInquiry,
				"InstanceId=$instanceId",
			},
			"RenewInstances":                           []string{""},
			"InquiryPriceRenewInstances":               []string{""},
			"ResetInstancesType":                       []string{""},
			"InquiryPriceResetInstancesType":           []string{""},
			"ModifyInstancesRenewFlag":                 []string{""},
			"ModifyInstancesAttribute":                 []string{""},
			"ResetInstancesInternetMaxBandwidth":       []string{""},
			"ModifyInstancesProject":                   []string{""},
			"UpdateInstanceVpcConfig":                  []string{""},
			"ResetInstancesPassword":                   []string{""},
			"DescribeInstanceInternetBandwidthConfigs": []string{""},
			"DescribeImages":                           []string{""},
			"CreateImage":                              []string{""},
			"DeleteImages":                             []string{""},
			"ModifyImageAttribute":                     []string{""},
			"SyncImages":                               []string{""},
			"ModifyImageSharePermission":               []string{""},
			"DescribeImageSharePermission":             []string{""},
			"AttachNetworkInterface":                   []string{""},
			"DescribeSecurityGroups":                   []string{""},
			"CreateSecurityGroup":                      []string{""},
			"DeleteSecurityGroup":                      []string{""},
			"ModifySecurityGroupAttribute":             []string{""},
			"DescribeSecurityGroupPolicy":              []string{""},
			"ModifySecurityGroupPolicy":                []string{""},
			"DescribeInstancesOfSecurityGroup":         []string{""},
			"ModifySecurityGroupsOfInstance":           []string{""},
			"DescribeAssociateSecurityGroups":          []string{""},
			"DescribeEip":                              []string{""},
			"DescribeEipQuota":                         []string{""},
			"ModifyEipAttributes":                      []string{""},
			"CreateEip":                                []string{""},
			"DeleteEip":                                []string{""},
			"EipBindInstance":                          []string{""},
			"EipUnBindInstance":                        []string{""},
			"TransformWanIpToEip":                      []string{""},
			"DescribeKeyPairs":                         []string{""},
			"CreateKeyPair":                            []string{""},
			"ModifyKeyPairAttribute":                   []string{""},
			"DeleteKeyPairs":                           []string{""},
			"ImportKeyPair":                            []string{""},
			"AssociateInstancesKeyPairs":               []string{""},
			"DisassociateInstancesKeyPairs":            []string{""},
		},
		PkgName: "cvm",
		Pkg:     new(Pkg),
	}

	gen.Run()
}
